// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MirayOrnek.Data;

#nullable disable

namespace MirayOrnek.Data.Migrations
{
    [DbContext(typeof(MirayDbContext))]
    [Migration("20220423234912_Create")]
    partial class Create
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("MirayOrnek.Data.Entitites.Basket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("BasketItemCount")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Baskets", (string)null);
                });

            modelBuilder.Entity("MirayOrnek.Data.Entitites.BasketItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("BasketId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("ProductName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("ProductPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("Id");

                    b.HasIndex("BasketId");

                    b.ToTable("BasketItems", (string)null);
                });

            modelBuilder.Entity("MirayOrnek.Data.Entitites.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("Id");

                    b.ToTable("Products", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateDate = new DateTime(2022, 4, 24, 2, 49, 12, 107, DateTimeKind.Local).AddTicks(8167),
                            IsActive = true,
                            Name = "Tasarım Çiçek",
                            Price = 90m
                        },
                        new
                        {
                            Id = 2,
                            CreateDate = new DateTime(2022, 4, 24, 2, 49, 12, 107, DateTimeKind.Local).AddTicks(8183),
                            IsActive = true,
                            Name = "Doğum Günü Çiçekleri",
                            Price = 79m
                        },
                        new
                        {
                            Id = 3,
                            CreateDate = new DateTime(2022, 4, 24, 2, 49, 12, 107, DateTimeKind.Local).AddTicks(8184),
                            IsActive = true,
                            Name = "Çiçek Buketleri",
                            Price = 94m
                        },
                        new
                        {
                            Id = 4,
                            CreateDate = new DateTime(2022, 4, 24, 2, 49, 12, 107, DateTimeKind.Local).AddTicks(8185),
                            IsActive = true,
                            Name = "Lilyum & Zambak",
                            Price = 108m
                        });
                });

            modelBuilder.Entity("MirayOrnek.Data.Entitites.BasketItem", b =>
                {
                    b.HasOne("MirayOrnek.Data.Entitites.Basket", "Basket")
                        .WithMany("BasketItems")
                        .HasForeignKey("BasketId")
                        .HasConstraintName("constraint_name");

                    b.Navigation("Basket");
                });

            modelBuilder.Entity("MirayOrnek.Data.Entitites.Basket", b =>
                {
                    b.Navigation("BasketItems");
                });
#pragma warning restore 612, 618
        }
    }
}
